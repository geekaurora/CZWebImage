// Generated by Apple Swift version 4.0 effective-3.2 (swiftlang-900.0.65.2 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("CZUtils")
@class UIAlertAction;
@class UIViewController;

/// Convenient helper class for AlertViewController displaying
SWIFT_CLASS("_TtC7CZUtils14CZAlertManager")
@interface CZAlertManager : NSObject
+ (void)showAlertWithTitle:(NSString * _Nullable)title message:(NSString * _Nonnull)message actionText1:(NSString * _Nonnull)actionText1 actionHandler1:(void (^ _Nullable)(UIAlertAction * _Nonnull))actionHandler1 on:(UIViewController * _Nullable)viewController completion:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// An abstract class that makes subclassing ConcurrentOperation easy to udpate KVO props <code>isReady</code>/<code>isExecuting</code>/<code>isFinished</code> automatically
/// Usage:
/// <ul>
///   <li>
///     Subclass must implement <code>execute()</code> when execute task
///   </li>
///   <li>
///     Subclass must invoke <code>finish()</code> any work is done or after a call to <code>cancel()</code> to move the operation into a completed state.
///   </li>
/// </ul>
/// https://gist.github.com/calebd
/// https://gist.github.com/alexaubry/1ee81a952b11a2ddc6a43480cc59032c
SWIFT_CLASS("_TtC7CZUtils21CZConcurrentOperation")
@interface CZConcurrentOperation : NSOperation
@property (nonatomic, readonly, getter=isReady) BOOL ready;
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
@property (nonatomic, readonly, getter=isConcurrent) BOOL concurrent;
/// Subclasses must implement <code>execute</code> and must not call super
- (void)execute;
/// Call this function after any work is done or after a call to <code>cancel()</code>
/// to move the operation into a completed state.
- (void)finish;
- (void)start;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Manage grouped concurrent executions completion, with same functionality as <code>DispatchGroup</code> class
SWIFT_CLASS("_TtC7CZUtils15CZDispatchGroup")
@interface CZDispatchGroup : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (void)enter;
- (void)leave;
- (void)wait;
@end

@class NSCoder;

/// Convenience Error class
SWIFT_CLASS("_TtC7CZUtils7CZError")
@interface CZError : NSError
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code description:(NSString * _Nullable)description OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary * _Nullable)dict SWIFT_UNAVAILABLE;
@end


/// Helper class for file related methods
SWIFT_CLASS("_TtC7CZUtils12CZFileHelper")
@interface CZFileHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull documentDirectory;)
+ (NSString * _Nonnull)documentDirectory SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Convenience class for scheduling sync/async execution on main queue
SWIFT_CLASS("_TtC7CZUtils20CZMainQueueScheduler")
@interface CZMainQueueScheduler : NSObject
/// Asynchronous execution
+ (void)async:(void (^ _Nonnull)(void))execution;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CZUtils13CZMutexLockOC")
@interface CZMutexLockOC : NSObject
- (id _Nullable)read:(id _Nullable (^ _Nonnull)(id _Nonnull))block;
- (id _Nullable)write:(id _Nullable (^ _Nonnull)(id _Nonnull))block;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class UIView;

SWIFT_CLASS("_TtC7CZUtils31CZNibLoadableCollectionViewCell")
@interface CZNibLoadableCollectionViewCell : UICollectionViewCell
@property (nonatomic, strong) UIView * _Null_unspecified nibContentView;
@property (nonatomic, readonly, copy) NSString * _Nullable xibName;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)setupViews;
@end


SWIFT_CLASS("_TtC7CZUtils26CZNibLoadableTableViewCell")
@interface CZNibLoadableTableViewCell : UITableViewCell
@property (nonatomic, readonly, copy) NSString * _Nullable xibName;
@property (nonatomic, strong) UIView * _Null_unspecified nibContentView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)setupViews;
@end


/// note:
///
/// <ol>
///   <li>
///     nibContentView, the first top level view in nib file, is added and overlapped on SubViewClass with zero inset
///   </li>
///   <li>
///     override setupViews() for customized initialization if needed, required to invoke super.setupViews()
///   </li>
/// </ol>
/// <ul>
///   <li>
///     Brief: Base class for view which is loaded from xib file.
///   </li>
///   <li>
///     Usage:
///     <ol>
///       <li>
///         Create xib file with the same name as SubViewClass
///       </li>
///       <li>
///         Set SubViewClass as xib file’s owner
///       </li>
///       <li>
///         xibName: same as View className by default. If you need to customize xibName, just override <code>var xibName: String</code> in your class
///       </li>
///     </ol>
///   </li>
/// </ul>
SWIFT_CLASS("_TtC7CZUtils17CZNibLoadableView")
@interface CZNibLoadableView : UIView
@property (nonatomic, readonly, copy) NSString * _Nullable xibName;
@property (nonatomic, strong) UIView * _Null_unspecified nibContentView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
@end


/// Mutex lock on top of <code>pthread_mutex_lock</code>/<code>pthread_mutex_unlock</code>
SWIFT_CLASS("_TtC7CZUtils14CZProMutexLock")
@interface CZProMutexLock : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Convenience mutex lock on top of NSLock
SWIFT_CLASS("_TtC7CZUtils19CriticalSectionLock")
@interface CriticalSectionLock : NSLock
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface NSArray<ObjectType> (SWIFT_EXTENSION(CZUtils))
+ (void)initialize;
+ (void)swizzleMethods;
- (BOOL)swizzled_writeTo:(NSURL * _Nonnull)url atomically:(BOOL)atomically SWIFT_WARN_UNUSED_RESULT;
- (BOOL)swizzled_writeToFile:(NSString * _Nonnull)path atomically:(BOOL)useAuxiliaryFile SWIFT_WARN_UNUSED_RESULT;
@end




@interface NSDictionary<KeyType, ObjectType> (SWIFT_EXTENSION(CZUtils))
+ (void)initialize;
+ (void)swizzleMethods;
- (BOOL)swizzled_writeTo:(NSURL * _Nonnull)url atomically:(BOOL)atomically SWIFT_WARN_UNUSED_RESULT;
- (BOOL)swizzled_writeToFile:(NSString * _Nonnull)path atomically:(BOOL)useAuxiliaryFile SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIButton (SWIFT_EXTENSION(CZUtils))
- (void)addHandlerFor:(UIControlEvents)controlEvents handler:(void (^ _Nonnull)(UIButton * _Nonnull))handler;
@end


@interface UIColor (SWIFT_EXTENSION(CZUtils))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull candyGreen;)
+ (UIColor * _Nonnull)candyGreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull facebookBlue;)
+ (UIColor * _Nonnull)facebookBlue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull dividerGrey;)
+ (UIColor * _Nonnull)dividerGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull searchBarColor;)
+ (UIColor * _Nonnull)searchBarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull searchBarTextGrey;)
+ (UIColor * _Nonnull)searchBarTextGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tabBarTintColor;)
+ (UIColor * _Nonnull)tabBarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tabBarItemTintColor;)
+ (UIColor * _Nonnull)tabBarItemTintColor SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(CZUtils))
- (UIImage * _Nonnull)cropToRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)cropToSize:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nonnull)cropToRatio:(CGFloat)ratio SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIScreen (SWIFT_EXTENSION(CZUtils))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGSize currSize;)
+ (CGSize)currSize SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat currWidth;)
+ (CGFloat)currWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat currHeight;)
+ (CGFloat)currHeight SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIView (SWIFT_EXTENSION(CZUtils))
- (void)fadeInAnimationName:(NSString * _Nonnull)animationName duration:(NSTimeInterval)duration;
@end

@class NSBundle;

@interface UIView (SWIFT_EXTENSION(CZUtils))
/// Load form nib file and overlay the contentView on superView
- (UIView * _Nonnull)loadAndOverlayOn:(UIView * _Nonnull)superView xibName:(NSString * _Nullable)xibName;
/// Unarchive and own properties of nibFile
/// \param xibName xib filename. <code>nil</code> by default
///
/// \param bundle bundle to load nib file.
///
///
/// returns:
/// views array unarchived from nib file
- (NSArray<UIView *> * _Nullable)loadFromNibFileWithXibName:(NSString * _Nullable)xibName bundle:(NSBundle * _Nonnull)bundle;
/// Overlap on superView, being added as subview of <code>superviewIn</code> if receiver has no superview
- (void)overlayOnSuperview:(UIView * _Nullable)superviewIn inset:(UIEdgeInsets)inset;
- (void)overlayOnSuperViewController:(UIViewController * _Nonnull)controller;
@end


@interface UIView (SWIFT_EXTENSION(CZUtils))
- (void)roundToCircleWithFrame;
- (void)roundToCircle;
- (void)roundCornerWithFrameWithCornerRadius:(CGFloat)cornerRadius white:(CGFloat)white;
- (void)roundCornerWithCornerRadius:(CGFloat)cornerRadius;
- (void)addGrayFrame:(CGFloat)white;
@end


@interface UIViewController (SWIFT_EXTENSION(CZUtils))
/// Stick the intput view’s edges to topLayoutGuide, bottomLayoutGuide, leading, trailing
- (void)overlapSubViewOnSelf:(UIView * _Nonnull)subview;
@property (nonatomic, readonly, strong) UIViewController * _Nonnull topMost;
- (void)showTitleOnNavBar;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
